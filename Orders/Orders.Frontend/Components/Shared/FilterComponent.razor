<div class="mb-2" style="display: flex; flex-wrap:wrap; align-items: center;">
    <div>
        <MudTextField @bind-Value="FilterValue"
                      Placeholder="Search..."
                      Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      IconSize="Size.Medium" Class="mt-0" />
    </div>
    <div class="mx-1">
        <MudButton Variant="Variant.Filled"
                   EndIcon="@Icons.Material.Filled.FilterList"
                   Size="Size.Small"
                   Color="Color.Primary"
                   @onclick="OnFilterApply">
            Filter
        </MudButton>
        <MudButton Variant="Variant.Filled"
                   Size="Size.Small"
                   EndIcon="@Icons.Material.Filled.Delete"
                   Color="Color.Info"
                   @onclick="CleanFilter">
            Clear
        </MudButton>
    </div>
</div>

@code {
    [Parameter] public string FilterValue { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> ApplyFilter { get; set; }

    private async Task CleanFilter()
    {
        FilterValue = string.Empty;
        await ApplyFilter.InvokeAsync(FilterValue);

    }

    private async Task OnFilterApply()
    {
        await ApplyFilter.InvokeAsync(FilterValue);
    }

}